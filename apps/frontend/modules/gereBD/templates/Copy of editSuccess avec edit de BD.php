<?php
// auto-generated by sfPropelCrud
// date: 2008/01/08 10:27:03
?>
<?php use_helper('Object') ?>
<?php use_helper('Validation') ?>
<?php use_helper('Javascript') ?>
<?php use_helper('sfExtjs2'); //(Probably OBSOLETE, I don't think this is necessary anymore) ?>  

<div class="roundedcornr_box_719771">
   <div class="roundedcornr_top_719771"><div></div></div>
      <div class="roundedcornr_content_719771">
<?php if ($bd->getId()): ?>
Modification de BD
<?php else: ?>
Saisie de BD
<?php endif; ?>
      </div>
   <div class="roundedcornr_bottom_719771"><div></div></div>
</div>	

<div id="msg" style="visibility: hidden"></div>
<div id="tabs"></div>

<?php

  $private = array ( );
  $public = array ( );

  $sfExtjs2Plugin = new sfExtjs2Plugin( array ('theme' => 'gray' ));
  $sfExtjs2Plugin->load();
  $sfExtjs2Plugin->begin();

  // **************************************
  // Application
  // **************************************

  
   // Create the data store BD
   
  $private ['ds'] = $sfExtjs2Plugin->JsonStore (
    array (
      'url'     => '/frontend_dev.php/gereBD/Json',
      'id'      =>  'id',
      'totalProperty' => 'total',
      'root'      => 'data',
      'fields'    => array(
        array(
          'name'  => 'photo1'
        ),
        array(
          'name'  => 'talbum'
        ),
       ),
      'sortInfo'  => array(
        'field'   => 'talbum',
        'direction' => 'ASC'
      ),
      'remoteSort'=> true
    )
  );
  // Create the data store series
   
  $private ['dsSeries'] = $sfExtjs2Plugin->JsonStore (
    array (
      'url'     => '/frontend_dev.php/gereBD/JsonListeSeries',
      'id'      =>  'id',
      'totalProperty' => 'totalListeSeries',
      'root'      => 'listeSeries',
      'fields'    => array(
        array(
          'name'  => 'id'
        ),
        array(
          'name'  => 'nom'
        ),
        array(
          'name'  => 'histoire'
        ),
                array(
          'name'  => 'commentaire'
        ),
        array(
          'name'  => 'photo1'
        ),
        array(
          'name'  => 'photo2'
        ),
        array(
          'name'  => 'siteWeb1'
        ),
        array(
          'name'  => 'siteWeb2'
        ),
           ),
      'sortInfo'  => array(
        'field'   => 'nom',
        'direction' => 'ASC'
      ),
      'remoteSort'=> true
    )
  );
  
   
// Création du bouton de liste des séries
$private['btListeSeries'] = $sfExtjs2Plugin->Button(array
    (
      'text'=>'Series',
      'renderTo' => 'tabs',
      'handler' => $sfExtjs2Plugin->asVar('addTabListeSeries')
    ));
    
// Création du bouton d'ajout de série
$btAddSerie = $sfExtjs2Plugin->Button(array
    (
      'text'=>'Créer Série',
      'handler' => $sfExtjs2Plugin->asVar('createSerie')
    ));    

// Création du bouton d'ajout de série
$btSaveSerie = $sfExtjs2Plugin->Button(array
    (
      'text'=>'Enregistrer',
      'handler' => $sfExtjs2Plugin->asVar('saveSaisieSerie')
    ));    
    
// Create the column model BD
   
  $private ['cm'] = $sfExtjs2Plugin->ColumnModel (
    array (
      'parameters' => array (
        $sfExtjs2Plugin->asAnonymousClass (
          array (
            'id'=>'photo1',
            'header' => 'Photo',
            'width' => 170,
            'sortable' => true,
            'dataIndex' => 'photo1'
          )
        ),
        $sfExtjs2Plugin->asAnonymousClass (
          array (
            'id'=>'talbum',
            'header' => 'Titre album',
            'width' => 120,
            'sortable' => true,
            'dataIndex' => 'talbum'
          )
        )
      )
    )
  );
   // Create the column model series
   
  $private ['cmSeries'] = $sfExtjs2Plugin->ColumnModel (
    array (
      'parameters' => array (
        $sfExtjs2Plugin->asAnonymousClass (
          array (
            'id'=>'photo1',
            'header' => 'Photo',
            'width' => 170,
            'sortable' => true,
            'dataIndex' => 'photo1'
          )
        ),
        $sfExtjs2Plugin->asAnonymousClass (
          array (
            'id'=>'nom',
            'header' => 'Titre serie',
            'width' => 120,
            'sortable' => true,
            'dataIndex' => 'nom'
          )
        )
      )
    )
  );
  
  
// Create the paging toolbar BD
   
  $private ['pt'] = $sfExtjs2Plugin->PagingToolbar (
    array(
      'store'       => $sfExtjs2Plugin->asVar ( 'ds' ),
      'pageSize'      => 8,
    'displayInfo' => true,
    'displayMsg' => 'Affichage des résultats {0} - {1} of {2}',
    'emptyMsg' => 'No results to display'
    )
  );
  
  $ptSeries = $sfExtjs2Plugin->PagingToolbar (
    array(
      'store'       => $sfExtjs2Plugin->asVar ( 'dsSeries' ),
      'pageSize'      => 8,
    'displayInfo' => true,
    'displayMsg' => 'Affichage des résultats {0} - {1} of {2}',
    'emptyMsg' => 'No results to display'
    )
  );
  
  
// Déclaration du Grid de liste des Séries
$gpListeSeries = $sfExtjs2Plugin->GridPanel (
    array (
      'id'        => 'gpListeSeries',
      'title'       => 'Liste des Series',
      'cm'        => $sfExtjs2Plugin->asVar ( 'cmSeries' ),
      'store'        => $sfExtjs2Plugin->asVar ( 'dsSeries' ),
      'enableColLock'   => false,
      'loadMask'      => true,
      'autocreate' => true,
      'closable'      => true,
      'xtype'      => 'grid',
      'width'       => 600,
      'height'      => 200,
      'frame'       => true,
      'iconCls'       => 'grid-details',
      'autoExpandColumn'  => 'nom',
      'bbar'        => $sfExtjs2Plugin->asVar ( $ptSeries ),
      'buttons' => array($sfExtjs2Plugin->asVar($btAddSerie)),
	  'listeners' => array('rowdblclick' => $sfExtjs2Plugin->asVar('editSerie'))
    )
  );
  
// Create the Grid de liste des Séries
$private['creerGpListeSeries'] = $sfExtjs2Plugin->asMethod(array('name' => 'creerGpListeSeries', 'source' => 'return '.$sfExtjs2Plugin->asVar($gpListeSeries))); 
  

$private['tabPanel'] = $sfExtjs2Plugin->TabPanel(array
    (
      'id' => 'tabPanel',
      'renderTo' => 'tabs',
      'resizeTabs'=>'true',
      'enableTabScroll'=>'true',
      'autoScroll'=>'true',
      'region'=>'center',
      'margins'=>'0 4 4 0',
      'deferredRender'=>'false',
      'width'=>600,
      'height'=>250
        ));
//**********************************
// Formulaire de saisie de BD
//**********************************

// Création du bouton d'ajout de BD
$btAddBd = $sfExtjs2Plugin->Button(array
    (
      'text'=>'Créer BD',
      'handler' => $sfExtjs2Plugin->asVar('createBd')
    ));    
        
// Création du bouton d'ajout de BD
$btSaveBd = $sfExtjs2Plugin->Button(array
    (
      'text'=>'Enregistrer',
      'handler' => $sfExtjs2Plugin->asVar('saveSaisieBd')
    ));    
// Create the Grid de liste des BD

$private ['gridPanel'] = $sfExtjs2Plugin->GridPanel (
    array (
      'id'        => 'gridPanel',
      'title'       => 'Liste des BD',
      'cm'        => $sfExtjs2Plugin->asVar ( 'cm' ),
      'ds'        => $sfExtjs2Plugin->asVar ( 'ds' ),
      'enableColLock'   => false,
      'loadMask'      => true,
      'xtype'      => 'grid',
      'width'       => 600,
      'height'      => 200,
      'frame'       => true,
      'iconCls'       => 'grid-details',
      'autoExpandColumn'  => 'talbum',
      'bbar'        => $sfExtjs2Plugin->asVar ( 'pt' ),
      'buttons' => array($sfExtjs2Plugin->asVar($btAddBd)),
	  'listeners' => array('rowdblclick' => $sfExtjs2Plugin->asVar('editBd'))
    )
  );
    
$bdId = $sfExtjs2Plugin->Hidden(array
(
	'id' => 'bdId',
	'fieldLabel' => 'Id',
	'name' => 'id'
));
$bdTalbum = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdTalbum',
	'fieldLabel' => 'Titre',
	'name' => 'talbum',
	'width' => 50
));
$bdCommentaire = $sfExtjs2Plugin->HtmlEditor(array
(
	'id' => 'bdCommentaire',
	'fieldLabel' => 'Commentaire',
	'name' => 'commentaire',
	'width' => 200
));
$bdDateParu = $sfExtjs2Plugin->Date(array
(
	'id' => 'bdDateParu',
	'fieldLabel' => 'Date de parution',
	'name' => 'dateParu',
	'width' => 50
));
$bdDepotLegal = $sfExtjs2Plugin->Date(array
(
	'id' => 'bdDepotLegal',
	'fieldLabel' => 'Date de depot legal',
	'name' => 'depotLegal',
	'width' => 20
));
$bdHistoire = $sfExtjs2Plugin->HtmlEditor(array
(
	'id' => 'bdHistoire',
	'fieldLabel' => 'Histoire',
	'name' => 'histoire',
	'width' => 200
));
$bdIntegrale = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdIntergale',
	'fieldLabel' => 'Integrale',
	'name' => 'intergrale',
	'width' => 10
));
$bdPhoto1 = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdPhoto1',
	'fieldLabel' => 'Photo principale',
	'name' => 'photo1',
	'width' => 200
));
$bdPhoto2 = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdPhoto2',
	'fieldLabel' => 'Photo autre',
	'name' => 'photo2',
	'width' => 200
));
$bdISBN = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdIsbn',
	'fieldLabel' => 'ISBN',
	'name' => 'ISBN',
	'width' => 50
));
$bdISSN = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdIssn',
	'fieldLabel' => 'ISSN',
	'name' => 'ISSN',
	'width' => 50
));
$bdNbrePage = $sfExtjs2Plugin->TextField(array
(
	'id' => 'bdNbrePage',
	'fieldLabel' => 'Nbre pages',
	'name' => 'nbrePage',
	'width' => 5
));
$bdEditeur = $sfExtjs2Plugin->Combobox(array
(
	'id' => 'bdEditeur',
	'fieldLabel' => 'Editeur',
	'name' => 'editeur_id',
	'width' => 25
));
$bdGenre = $sfExtjs2Plugin->Combobox(array
(
	'id' => 'bdGenre',
	'fieldLabel' => 'Genre',
	'name' => 'genre_id',
	'width' => 25
));
$bdSerie = $sfExtjs2Plugin->Combobox(array
(
	'id' => 'bdSerie',
	'fieldLabel' => 'Serie',
	'name' => 'serie_id',
	'width' => 25
));

// Déclaration du formulaire de saisie des BD
$formBd = $sfExtjs2Plugin->FormPanel(array
(
	'id'        	=> 'formBd',
    'title'       	=> 'Saisie de BD',
	'frame' => true,
	'width' => 500,
	'autoHeight' => true,
    'items' 		=> array( 
$sfExtjs2Plugin->asVar ( $bdId ), 
$sfExtjs2Plugin->asVar ( $bdTalbum ), 
$sfExtjs2Plugin->asVar ( $bdCommentaire ), 
$sfExtjs2Plugin->asVar ( $bdDateParu ),
$sfExtjs2Plugin->asVar ( $bdDepotLegal ),
$sfExtjs2Plugin->asVar ( $bdHistoire ),
$sfExtjs2Plugin->asVar ( $bdIntegrale ),
$sfExtjs2Plugin->asVar ( $bdISBN ),
$sfExtjs2Plugin->asVar ( $bdISSN ),
$sfExtjs2Plugin->asVar ( $bdNbrePage ),
$sfExtjs2Plugin->asVar ( $bdEditeur ),
$sfExtjs2Plugin->asVar ( $bdGenre ),
$sfExtjs2Plugin->asVar ( $bdSerie ),
$sfExtjs2Plugin->asVar ( $bdPhoto1 ), 
$sfExtjs2Plugin->asVar ( $bdPhoto2 )
),
    'buttons' => array( $sfExtjs2Plugin->asVar ($btSaveBd))
));
// Create du formulaire de saisie des BD
$private['creerFmSaisieBd'] = $sfExtjs2Plugin->asMethod(array('name' => 'creerFmSaisieBd', 'source' => 'return '.$sfExtjs2Plugin->asVar($formBd))); 
        
// Création de l'action pour le bouton de sauvegarde de bd
$private['saveSaisieBd'] = $sfExtjs2Plugin->asMethod(array('name' => 'saveSaisieBd', 'source' => '
		if (fmBD.getForm().isValid()) {
		fmBD.getForm().submit({
		url: "/frontend_dev.php/gereBD/UpdateBd",
		method: "POST",
		reset: false,
		waitMsg:"Saving...",
		    success: function(form, action) {
		               Ext.Msg.alert("SUCCESS", "Saisie enregistrée");
	},
		    failure: function(form, action) {
		        switch (action.failureType) {
		            case Ext.form.Action.CLIENT_INVALID:
		                Ext.Msg.alert("Failure", "Form fields may not be submitted with invalid values");
		                break;
		            case Ext.form.Action.CONNECT_FAILURE:
		                Ext.Msg.alert("Failure", "Ajax communication failed");
		                break;
		            case Ext.form.Action.SERVER_INVALID:
		               Ext.Msg.alert("Failure", action.result.msg);
		       }
		    }
		});
}  else {
		               Ext.Msg.alert("INVALIDE", "Formulaire invalide");

}	
')); 
// Création de l'action pour la modification de BD
$private['fnEditBd'] = $sfExtjs2Plugin->asMethod(array('parameters' => 'grid, rowIndex, e', 'name' => 'editBd',  'source' => '
	fmBD = creerFmSaisieBd();
	tabPanel.add({title: "Modification de BD" ,
			id: "bdSaisie",
            iconCls: "tabs",
            items: [fmBD],
            closable:true});	   
    tabPanel.setActiveTab("bdSaisie");
    tabPanel.doLayout();
	fmBD.getComponent("bdId").setValue(ds.getAt(rowIndex).data.id); 
	fmBD.getComponent("bdTalbum").setValue(ds.getAt(rowIndex).data.talbum); 
	fmBD.getComponent("bdCommentaire").setValue(ds.getAt(rowIndex).data.commentaire); 
	fmBD.getComponent("bdDateParu").setValue(ds.getAt(rowIndex).data.dateParu); 
	fmBD.getComponent("bdDepotLegal").setValue(ds.getAt(rowIndex).data.depotLegal); 
	fmBD.getComponent("bdHistoire").setValue(ds.getAt(rowIndex).data.histoire); 
	fmBD.getComponent("bdIntegrale").setValue(ds.getAt(rowIndex).data.integrale); 
	fmBD.getComponent("bdISBN").setValue(ds.getAt(rowIndex).data.ISBN); 
	fmBD.getComponent("bdISSN").setValue(ds.getAt(rowIndex).data.ISSN); 
	fmBD.getComponent("bdNbrePage").setValue(ds.getAt(rowIndex).data.nbrePage); 
	fmBD.getComponent("bdEditeur").setValue(ds.getAt(rowIndex).data.editeur); 
	fmBD.getComponent("bdGenre").setValue(ds.getAt(rowIndex).data.genre); 
	fmBD.getComponent("bdSerie").setValue(ds.getAt(rowIndex).data.serie); 
	fmBD.getComponent("bdPhoto1").setValue(ds.getAt(rowIndex).data.photo1); 
	fmBD.getComponent("bdPhoto2").setValue(ds.getAt(rowIndex).data.photo2); 
	')); 
// Création de l'action pour la création de série
$private['fnCreateBd'] = $sfExtjs2Plugin->asMethod(array( 'name' => 'createBd',  'source' => '
	fmBD = creerFmSaisieBd();
	tabPanel.add({title: "Création de BD" ,
			id: "bdSaisie",
            iconCls: "tabs",
            items: [fmBD],
            closable:true});	   
    tabPanel.setActiveTab("bdSaisie");
    tabPanel.doLayout();
')); 

//**********************************
// Formulaire de saisie de série
//**********************************

$serieId = $sfExtjs2Plugin->Hidden(array
(
	'id' => 'serieId',
	'fieldLabel' => 'Id',
	'name' => 'id'
));
$serieHistoire = $sfExtjs2Plugin->HtmlEditor(array
(
	'id' => 'serieHistoire',
	'fieldLabel' => 'Histoire',
	'name' => 'histoire',
	'width' => 200
));
$serieCommentaire = $sfExtjs2Plugin->HtmlEditor(array
(
	'id' => 'serieCommentaire',
	'fieldLabel' => 'Commentaire',
	'name' => 'commentaire',
	'width' => 200
));
$serieNom = $sfExtjs2Plugin->TextField(array
(
	'id' => 'serieNom',
	'fieldLabel' => 'Nom',
	'name' => 'nom',
	'width' => 200
));
$seriePhoto1 = $sfExtjs2Plugin->TextField(array
(
	'id' => 'seriePhoto1',
	'fieldLabel' => 'Photo principale',
	'name' => 'photo1',
	'width' => 200
));
$seriePhoto2 = $sfExtjs2Plugin->TextField(array
(
	'id' => 'seriePhoto2',
	'fieldLabel' => 'Photo autre',
	'name' => 'photo2',
	'width' => 200
));
$serieSiteWeb1 = $sfExtjs2Plugin->TextField(array
(
	'id' => 'serieSiteWeb1',
	'fieldLabel' => 'Site web principal',
	'name' => 'siteWeb1',
	'width' => 200
));
$serieSiteWeb2 = $sfExtjs2Plugin->TextField(array
(
	'id' => 'serieSiteWeb2',
	'fieldLabel' => 'Site web autre',
	'name' => 'siteWeb2',
	'width' => 200
));

// Déclaration du formulaire de saisie des Séries
$formSerie = $sfExtjs2Plugin->FormPanel(array
(
	'id'        	=> 'formSerie',
    'title'       	=> 'Saisie de Serie',
	'frame' => true,
	'width' => 500,
	'autoHeight' => true,
    'items' 		=> array( 
$sfExtjs2Plugin->asVar ( $serieId ), 
$sfExtjs2Plugin->asVar ( $serieNom ), 
$sfExtjs2Plugin->asVar ( $serieHistoire ),
$sfExtjs2Plugin->asVar ( $serieCommentaire ), 
$sfExtjs2Plugin->asVar ( $seriePhoto1 ), 
$sfExtjs2Plugin->asVar ( $seriePhoto2 ), 
$sfExtjs2Plugin->asVar ( $serieSiteWeb1 ), 
$sfExtjs2Plugin->asVar ( $serieSiteWeb2 )
),
    'buttons' => array( $sfExtjs2Plugin->asVar ($btSaveSerie))
));
// Create du formulaire de saisie des Séries
$private['creerFmSaisieSeries'] = $sfExtjs2Plugin->asMethod(array('name' => 'creerFmSaisieSeries', 'source' => 'return '.$sfExtjs2Plugin->asVar($formSerie))); 


// Création de l'action pour le bouton
$private['addTabListeSeries'] = $sfExtjs2Plugin->asMethod(array('name' => 'addTabListeSeries', 'source' => '
	gp = creerGpListeSeries();
	tabPanel.add({title: "Liste des séries " ,
			id: "serieListe",
            iconCls: "tabs",
            items: [gp],
            closable:true});	   
    dsSeries.load({params:{start: 0, limit: 8}, callback: function(){tabPanel.setActiveTab("serieListe");tabPanel.doLayout();}});
	')); 

// Création de l'action pour le bouton de sauvegarde de série
$private['saveSaisieSerie'] = $sfExtjs2Plugin->asMethod(array('name' => 'saveSaisieSerie', 'source' => '
		if (fm.getForm().isValid()) {
		fm.getForm().submit({
		url: "/frontend_dev.php/gereBD/UpdateSerie",
		method: "POST",
		reset: false,
		waitMsg:"Saving...",
		    success: function(form, action) {
		               Ext.Msg.alert("SUCCESS", "Saisie enregistrée");
	},
		    failure: function(form, action) {
		        switch (action.failureType) {
		            case Ext.form.Action.CLIENT_INVALID:
		                Ext.Msg.alert("Failure", "Form fields may not be submitted with invalid values");
		                break;
		            case Ext.form.Action.CONNECT_FAILURE:
		                Ext.Msg.alert("Failure", "Ajax communication failed");
		                break;
		            case Ext.form.Action.SERVER_INVALID:
		               Ext.Msg.alert("Failure", action.result.msg);
		       }
		    }
		});
}  else {
		               Ext.Msg.alert("INVALIDE", "Formulaire invalide");

}	
')); 
// Création de l'action pour la modification de série
$private['fnEditSerie'] = $sfExtjs2Plugin->asMethod(array('parameters' => 'grid, rowIndex, e', 'name' => 'editSerie',  'source' => '
	fm = creerFmSaisieSeries();
	tabPanel.add({title: "Modification de série" ,
			id: "serieSaisie",
            iconCls: "tabs",
            items: [fm],
            closable:true});	   
    tabPanel.setActiveTab("serieSaisie");
    tabPanel.doLayout();
	fm.getComponent("serieId").setValue(dsSeries.getAt(rowIndex).data.id); 
	fm.getComponent("serieNom").setValue(dsSeries.getAt(rowIndex).data.nom); 
	fm.getComponent("serieHistoire").setValue(dsSeries.getAt(rowIndex).data.histoire); 
	fm.getComponent("serieCommentaire").setValue(dsSeries.getAt(rowIndex).data.commentaire); 
	fm.getComponent("seriePhoto1").setValue(dsSeries.getAt(rowIndex).data.photo1); 
	fm.getComponent("seriePhoto2").setValue(dsSeries.getAt(rowIndex).data.photo2); 
	fm.getComponent("serieSiteWeb1").setValue(dsSeries.getAt(rowIndex).data.siteWeb1); 
	fm.getComponent("serieSiteWeb2").setValue(dsSeries.getAt(rowIndex).data.siteWeb2); 
')); 
// Création de l'action pour la création de série
$private['fnCreateSerie'] = $sfExtjs2Plugin->asMethod(array( 'name' => 'createSerie',  'source' => '
	fm = creerFmSaisieSeries();
	tabPanel.add({title: "Création de série" ,
			id: "serieSaisie",
            iconCls: "tabs",
            items: [fm],
            closable:true});	   
    tabPanel.setActiveTab("serieSaisie");
    tabPanel.doLayout();
')); 

//========================================================================
// Initialisation de la page
//========================================================================
$public ['init'] = $sfExtjs2Plugin->asMethod ( '
    Ext.QuickTips.init();
    tabPanel.add({title: "Liste des BD" ,
			id: "bdListe",
    		iconCls: "tabs",
            items: [gridPanel]});
    ds.load({params:{start: 0, limit: 8}, callback: function(){tabPanel.setActiveTab("bdListe");tabPanel.doLayout();}});
	' );

  $sfExtjs2Plugin->beginApplication ( array ('name' => 'App', 'private' => $private, 'public' => $public ) );
  $sfExtjs2Plugin->endApplication ();

  $sfExtjs2Plugin->end ('Ext.onReady(App.init, App);');
?>
